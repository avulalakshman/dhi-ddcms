//root project repo configuration
buildscript {
    repositories { 
        mavenLocal()
        maven { url archivaUrl }
        mavenCentral() 
    }
}

//plugin for root project - sonar plugin has to be applied at root

plugins {
    id "org.sonarqube" version "2.6.2"
    id 'pl.allegro.tech.build.axion-release' version "1.12.1"
    id 'java'
}

group = 'com.heraizen'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

scmVersion {
    repository.customUsername = getProperty('gitUser')
    repository.customPassword = getProperty('gitPasswd')
}

//config for sub projects
subprojects {
    buildscript {
        repositories { 
            mavenLocal()
            maven { url archivaSnapshotsUrl }
            maven { url archivaUrl }
            mavenCentral() 
        }
    }
    
    ext { springBootVersion = '2.4.5' }
    ext { springDepMgmtVersion = '1.0.11.RELEASE' }
    
    apply plugin: 'java'
    apply plugin: 'maven-publish'
    apply plugin: 'jacoco'
    
    sourceCompatibility = 1.8
    
    group = 'com.heraizen'
    
    repositories {
        mavenLocal()
        maven { url archivaSnapshotsUrl }
        maven { url archivaUrl }
        mavenCentral()
    }
    
    configurations {
        compileOnly {
            extendsFrom annotationProcessor
        }
        testCompileOnly {
            extendsFrom testAnnotationProcessor
        }
    }

    test {
        useJUnitPlatform()
        testLogging {
            outputs.upToDateWhen {false}
            showStandardStreams = true
        }
    }

    afterEvaluate {
        project.version = scmVersion.version.endsWith('SNAPSHOT') ?
        scmVersion.version:scmVersion.version+".RELEASE"
        println project.name + " SCM Version: " + scmVersion.version + " project.version: " + project.version + " version: " + version
    }
    
    dependencies {
        annotationProcessor 'org.projectlombok:lombok'
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
        implementation 'org.springframework.boot:spring-boot-starter'
        
        testAnnotationProcessor 'org.projectlombok:lombok'
        testCompileOnly 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
    }

    //NOTE: project.version is available afterEvaluate otherwise it is unspecified here
    publishing {
        publications {
            mavenJava(MavenPublication){
                // bootJar is the default build task configured by Spring Boot
                artifact jar
            }
        }
        repositories {
            maven {
                name "Archiva"
                afterEvaluate {
                    url = project.version.endsWith('SNAPSHOT') ? archivaSnapshotsUrl : archivaUrl
                    println "Project " + project  + " Publish Url " + url
                }
                credentials {
                    username = mavenUser
                    password = mavenPassword
                }
            }
        }
    }

    //A simple Task to save on keyboard typing! mimics maven install
    task install(dependsOn:publishToMavenLocal) {
        description 'Publishes to Local Maven Repository'
        group 'Publishing'
        doLast{ println "Installed to Maven Local Repository" }
    }
}

